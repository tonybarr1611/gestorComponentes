/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gestorcomponentes;

import java.io.File;
import java.util.ArrayList;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.stream.events.EntityReference;

import com.mycompany.gestorcomponentes.Componentes.DeContacto;
import com.mycompany.gestorcomponentes.Componentes.Defensa.DefensaAerea;
import com.mycompany.gestorcomponentes.Componentes.Defensa.DefensaAtaqueMultiple;
import com.mycompany.gestorcomponentes.Componentes.Defensa.DefensaBloque;
import com.mycompany.gestorcomponentes.Componentes.Defensa.DefensaDeContacto;
import com.mycompany.gestorcomponentes.Componentes.Defensa.DefensaImpacto;
import com.mycompany.gestorcomponentes.Componentes.Defensa.DefensaMedianoAlcance;
import com.mycompany.gestorcomponentes.Componentes.Zombies.ZombieAereo;
import com.mycompany.gestorcomponentes.Componentes.Zombies.ZombieChoque;
import com.mycompany.gestorcomponentes.Componentes.Zombies.ZombieDeContacto;
import com.mycompany.gestorcomponentes.Componentes.Zombies.ZombieMedianoAlcance;

/**
 *
 * @author barra
 */

enum TipoZombies{
    DE_CONTACTO (ZombieDeContacto.class),
    MEDIANO_ALCANCE (ZombieMedianoAlcance.class),
    AEREO (ZombieAereo.class),
    CHOQUE_IMPACTO (ZombieChoque.class);

    TipoZombies(){
    }

    TipoZombies(Class<? extends Componente> clase){
        this.clase = clase;
    }

    private Class<? extends Componente> clase;

    public Class<? extends Componente> getClase(){
        return clase;
    }
}

enum TipoDefensas{
    DE_CONTACTO (DefensaDeContacto.class),
    MEDIANO_ALCANCE (DefensaMedianoAlcance.class),
    AEREO (DefensaAerea.class),
    CHOQUE_IMPACTO (DefensaImpacto.class),
    ATAQUE_MULTIPLE (DefensaAtaqueMultiple.class),
    BLOQUES (DefensaBloque.class);

    TipoDefensas(){
    }

    TipoDefensas(Class<? extends Componente> clase){
        this.clase = clase;
    }

    private Class<? extends Componente> clase;

    public Class<? extends Componente> getClase(){
        return clase;
    }
}

public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbtTipo = new javax.swing.ButtonGroup();
        rbtClasificación = new javax.swing.ButtonGroup();
        rbtTipoRecursos = new javax.swing.ButtonGroup();
        fchRecursos = new javax.swing.JFileChooser();
        pnlHeader = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblDevelopers = new javax.swing.JLabel();
        lblNombreComponente = new javax.swing.JLabel();
        txfNombreComponente = new javax.swing.JTextField();
        lblTipoComponente = new javax.swing.JLabel();
        rbtOpcion1 = new javax.swing.JRadioButton();
        rbtOpcion2 = new javax.swing.JRadioButton();
        rbtOpcion3 = new javax.swing.JRadioButton();
        rbtOpcion4 = new javax.swing.JRadioButton();
        rbtOpcion5 = new javax.swing.JRadioButton();
        rbtOpcion6 = new javax.swing.JRadioButton();
        lblClasificacionComponente = new javax.swing.JLabel();
        rbtDefensa = new javax.swing.JRadioButton();
        rbtZombie = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        btnCargarArchivo = new javax.swing.JButton();
        lblVida = new javax.swing.JLabel();
        rbtGif = new javax.swing.JRadioButton();
        rbtSprites = new javax.swing.JRadioButton();
        lblSelected = new javax.swing.JLabel();
        lblImagenesTipo1 = new javax.swing.JLabel();
        txfVida = new javax.swing.JTextField();
        lblGolpes = new javax.swing.JLabel();
        txfGolpes = new javax.swing.JTextField();
        lblNivel = new javax.swing.JLabel();
        txfNivel = new javax.swing.JTextField();
        lblCampos = new javax.swing.JLabel();
        txfCampos = new javax.swing.JTextField();
        lblNivelAparicion = new javax.swing.JLabel();
        txfNivelAparicion = new javax.swing.JTextField();
        lblAlcance = new javax.swing.JLabel();
        txfAlcance = new javax.swing.JTextField();
        btnGuardarComponente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestor de componentes - The Walking TEC");
        setResizable(false);

        pnlHeader.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTitulo.setText("Gestor de componentes - The Walking TEC");

        lblDevelopers.setText("Victor Aymerich y Anthony Barrantes");

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitulo)
                    .addGroup(pnlHeaderLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblDevelopers)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDevelopers)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblNombreComponente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNombreComponente.setText("Nombre del componente:");

        txfNombreComponente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblTipoComponente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTipoComponente.setText("Tipo del componente:");

        rbtTipo.add(rbtOpcion1);
        rbtOpcion1.setSelected(true);
        rbtOpcion1.setText("De contacto");
        rbtOpcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtOpcion1ActionPerformed(evt);
            }
        });

        rbtTipo.add(rbtOpcion2);
        rbtOpcion2.setText("Mediano Alcance");
        rbtOpcion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtOpcion2ActionPerformed(evt);
            }
        });

        rbtTipo.add(rbtOpcion3);
        rbtOpcion3.setText("Aéreo");
        rbtOpcion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtOpcion3ActionPerformed(evt);
            }
        });

        rbtTipo.add(rbtOpcion4);
        rbtOpcion4.setText("Choque/Impacto");
        rbtOpcion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtOpcion4ActionPerformed(evt);
            }
        });

        rbtTipo.add(rbtOpcion5);
        rbtOpcion5.setText("Ataque múltiple");
        rbtOpcion5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtOpcion5ActionPerformed(evt);
            }
        });

        rbtTipo.add(rbtOpcion6);
        rbtOpcion6.setText("Bloques");
        rbtOpcion6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtOpcion6ActionPerformed(evt);
            }
        });

        lblClasificacionComponente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblClasificacionComponente.setText("Clasificación del componente:");

        rbtClasificación.add(rbtDefensa);
        rbtDefensa.setSelected(true);
        rbtDefensa.setText("Defensa");
        rbtDefensa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDefensaActionPerformed(evt);
            }
        });

        rbtClasificación.add(rbtZombie);
        rbtZombie.setText("Zombie");
        rbtZombie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtZombieActionPerformed(evt);
            }
        });

        btnCargarArchivo.setText("Cargar archivo");
        btnCargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarArchivoActionPerformed(evt);
            }
        });

        lblVida.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblVida.setText("Vida:");

        rbtTipoRecursos.add(rbtGif);
        rbtGif.setSelected(true);
        rbtGif.setText("GIF");
        rbtGif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtGifActionPerformed(evt);
            }
        });

        rbtTipoRecursos.add(rbtSprites);
        rbtSprites.setText("Sprites");
        rbtSprites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSpritesActionPerformed(evt);
            }
        });

        lblImagenesTipo1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblImagenesTipo1.setText("Tipo de recursos:");

        txfVida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfVidaKeyReleased(evt);
            }
        });

        lblGolpes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblGolpes.setText("Golpes por unidad de tiempo:");

        txfGolpes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfGolpesKeyReleased(evt);
            }
        });

        lblNivel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNivel.setText("Nivel:");

        txfNivel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfNivelKeyReleased(evt);
            }
        });

        lblCampos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCampos.setText("Campos");

        txfCampos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfCamposKeyReleased(evt);
            }
        });

        lblNivelAparicion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNivelAparicion.setText("Nivel de aparición:");

        txfNivelAparicion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfNivelAparicionKeyReleased(evt);
            }
        });

        lblAlcance.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAlcance.setText("Alcance:");

        txfAlcance.setEnabled(false);
        txfAlcance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txfAlcanceKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblImagenesTipo1)
                                .addGap(127, 127, 127)
                                .addComponent(rbtGif)
                                .addGap(111, 111, 111)
                                .addComponent(rbtSprites)
                                .addGap(86, 86, 86)
                                .addComponent(btnCargarArchivo))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblGolpes, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblVida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txfGolpes, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txfVida, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txfCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txfNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblNivelAparicion, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txfNivelAparicion, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(lblAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txfAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, Short.MAX_VALUE))))))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtGif)
                    .addComponent(rbtSprites)
                    .addComponent(btnCargarArchivo)
                    .addComponent(lblImagenesTipo1))
                .addGap(5, 5, 5)
                .addComponent(lblSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVida)
                    .addComponent(txfVida, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGolpes)
                    .addComponent(txfGolpes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNivel)
                    .addComponent(txfNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCampos)
                    .addComponent(txfCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNivelAparicion)
                    .addComponent(txfNivelAparicion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlcance)
                    .addComponent(txfAlcance, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnCargarArchivo.getAccessibleContext().setAccessibleDescription("");

        btnGuardarComponente.setText("Guardar Componente");
        btnGuardarComponente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarComponenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNombreComponente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txfNombreComponente, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTipoComponente)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblClasificacionComponente)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbtOpcion2)
                                            .addComponent(rbtOpcion1))))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbtOpcion4)
                                            .addComponent(rbtOpcion3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbtOpcion5)
                                            .addComponent(rbtOpcion6))
                                        .addGap(14, 14, 14))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbtDefensa)
                                        .addGap(80, 80, 80)
                                        .addComponent(rbtZombie)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(btnGuardarComponente, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreComponente)
                    .addComponent(txfNombreComponente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClasificacionComponente)
                    .addComponent(rbtDefensa)
                    .addComponent(rbtZombie))
                .addGap(26, 26, 26)
                .addComponent(lblTipoComponente)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtOpcion1)
                            .addComponent(rbtOpcion5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtOpcion2)
                            .addComponent(rbtOpcion6)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbtOpcion3)
                        .addGap(18, 18, 18)
                        .addComponent(rbtOpcion4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnGuardarComponente)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void deleteAllFilters(){
        FileFilter filtros[] = fchRecursos.getChoosableFileFilters();
        for (FileFilter filtro : filtros) {
            fchRecursos.removeChoosableFileFilter(filtro);
        }
    }
    
    private boolean isNumeric(String str){
        try{
            Double.parseDouble(str);
        }catch (Exception e){
            return false;
        }
        return true;
    }

    private void unableNonRange(){
        txfAlcance.setEnabled(false);
        txfAlcance.setText("");
    }

    private void enableRange(){
        txfAlcance.setEnabled(true);
    }
    
    private void rbtZombieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtZombieActionPerformed
        if (rbtOpcion5.isSelected() || rbtOpcion6.isSelected()){
            rbtOpcion5.setSelected(false);
            rbtOpcion6.setSelected(false);
            rbtOpcion1.setSelected(true);
        }
        rbtOpcion5.setEnabled(false);
        rbtOpcion6.setEnabled(false);
        
    }//GEN-LAST:event_rbtZombieActionPerformed

    private void txfCheckInts(javax.swing.JTextField txf){
        String txfText = txf.getText().trim();
        if (!isNumeric(txfText))
            if (txfText.length() > 0){
                txf.setText(txfText.substring(0, txfText.length()-1));
                txfCheckInts(txf);
            }
            else
                txf.setText("");
    }

    private Class<? extends Componente> getTipoComponente(){
        if (rbtDefensa.isSelected()){
            if (rbtOpcion1.isSelected())
                return TipoDefensas.DE_CONTACTO.getClase();
            else if (rbtOpcion2.isSelected())
                return TipoDefensas.MEDIANO_ALCANCE.getClase();
            else if (rbtOpcion3.isSelected())
                return TipoDefensas.AEREO.getClase();
            else if (rbtOpcion4.isSelected())
                return TipoDefensas.CHOQUE_IMPACTO.getClase();
            else if (rbtOpcion5.isSelected())
                return TipoDefensas.ATAQUE_MULTIPLE.getClase();
            else if (rbtOpcion6.isSelected())
                return TipoDefensas.BLOQUES.getClase();
            return null;
        }else if (rbtZombie.isSelected()){
            if (rbtOpcion1.isSelected())
                return TipoZombies.DE_CONTACTO.getClase();
            else if (rbtOpcion2.isSelected())
                return TipoZombies.MEDIANO_ALCANCE.getClase();
            else if (rbtOpcion3.isSelected())
                return TipoZombies.AEREO.getClase();
            else if (rbtOpcion4.isSelected())
                return TipoZombies.CHOQUE_IMPACTO.getClase();
            return null;
        }
        return null;
    }

    private boolean verifyFields(){
        if (txfNombreComponente.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "El nombre del componente no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if (txfVida.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "La vida del componente no puede estar vacía", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if (lblSelected.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "Debe seleccionar un archivo", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if (txfGolpes.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "Los golpes por unidad de tiempo no pueden estar vacíos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if (txfNivel.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "El nivel no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if (txfCampos.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "Los campos no pueden estar vacíos", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if (txfNivelAparicion.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "El nivel de aparición no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }else if (txfAlcance.isEnabled() && txfAlcance.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(this, "El alcance no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private boolean verifyName(String path, String Nombre){
        File dir = new File(path);
        File[] files = dir.listFiles();
        Nombre = Nombre + ".json";
        for (File file : files) {
            if (file.getName().equals(Nombre)){
                JOptionPane.showMessageDialog(this, "Ya existe un componente con ese nombre", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        return true;
    }

    private void wipeEntries(){
        txfNombreComponente.setText("");
        txfVida.setText("");
        txfGolpes.setText("");
        txfNivel.setText("");
        txfCampos.setText("");
        txfNivelAparicion.setText("");
        txfAlcance.setText("");
        lblSelected.setText("");
        rbtOpcion1.setSelected(true);
        rbtDefensa.setSelected(true);
        rbtGif.setSelected(true);
    }

    private void rbtSpritesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSpritesActionPerformed
        fchRecursos.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        deleteAllFilters();    
        fchRecursos.setAcceptAllFileFilterUsed(false);
        fchRecursos.setFileFilter(new FileNameExtensionFilter("Directorio", "dir"));
    }//GEN-LAST:event_rbtSpritesActionPerformed

    private void rbtGifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtGifActionPerformed
        fchRecursos.setFileSelectionMode(JFileChooser.FILES_ONLY);
        deleteAllFilters();
        fchRecursos.setAcceptAllFileFilterUsed(false);
        fchRecursos.setFileFilter(new FileNameExtensionFilter("GIF", "gif"));
    }//GEN-LAST:event_rbtGifActionPerformed

    private void rbtDefensaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDefensaActionPerformed
        rbtOpcion5.setEnabled(true);
        rbtOpcion6.setEnabled(true);
    }//GEN-LAST:event_rbtDefensaActionPerformed

    private void btnCargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarArchivoActionPerformed
        int resultadoFch = fchRecursos.showOpenDialog(this);
        if (resultadoFch == JFileChooser.APPROVE_OPTION){
            System.out.println("Archivo seleccionado: " + fchRecursos.getSelectedFile().getAbsolutePath());
            lblSelected.setText(fchRecursos.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_btnCargarArchivoActionPerformed

    private void txfVidaKeyReleased(java.awt.event.KeyEvent evt) {                                     
        txfCheckInts(txfVida);
    }                                   

    private void txfGolpesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfGolpesKeyReleased
        txfCheckInts(txfGolpes);
    }//GEN-LAST:event_txfGolpesKeyReleased

    private void txfNivelAparicionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfNivelAparicionKeyReleased
        txfCheckInts(txfNivelAparicion);
    }//GEN-LAST:event_txfNivelAparicionKeyReleased

    private void txfAlcanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfAlcanceKeyReleased
        txfCheckInts(txfAlcance);
    }//GEN-LAST:event_txfAlcanceKeyReleased

    private void rbtOpcion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtOpcion2ActionPerformed
        enableRange();
    }//GEN-LAST:event_rbtOpcion2ActionPerformed

    private void rbtOpcion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtOpcion4ActionPerformed
        enableRange();
    }//GEN-LAST:event_rbtOpcion4ActionPerformed

    private void rbtOpcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtOpcion1ActionPerformed
        unableNonRange();
    }//GEN-LAST:event_rbtOpcion1ActionPerformed

    private void rbtOpcion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtOpcion3ActionPerformed
        unableNonRange();
    }//GEN-LAST:event_rbtOpcion3ActionPerformed

    private void rbtOpcion5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtOpcion5ActionPerformed
        unableNonRange();
    }//GEN-LAST:event_rbtOpcion5ActionPerformed

    private void rbtOpcion6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtOpcion6ActionPerformed
        unableNonRange();
    }//GEN-LAST:event_rbtOpcion6ActionPerformed

    private void btnGuardarComponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarComponenteActionPerformed
        // Se verifica que todos los campos estén llenos
        if (!verifyFields())
            return;
        // Se crea un "puntero" a la clase del componente
        Class<? extends Componente> tipoComponente = getTipoComponente();
        Componente componente;
        String Nombre = txfNombreComponente.getText().trim();
        String tipoApariencia = rbtGif.isSelected() ? "GIF" : "SPRITES";
        ArrayList<String> sprites;

        // Se verifica que no exista un componente con el mismo nombre
        String currentDir = System.getProperty("user.dir");
        if (!verifyName(currentDir + "/Componentes", Nombre)){
            return;
        }

        // Si el tipo de apariencia es GIF, se crea un ArrayList con el path del archivo seleccionado
        if (tipoApariencia == "GIF"){
            sprites = new ArrayList<>();
            sprites.add(lblSelected.getText().trim());
        }else{
            // Si el tipo de apariencia es SPRITES, se crea un ArrayList con los paths de las imágenes en el directorio seleccionado
            sprites = new ArrayList<>();
            File dir = new File(lblSelected.getText().trim());
            for (File file : dir.listFiles()) {
                if (file.getName().endsWith(".png") || file.getName().endsWith(".jpg") || file.getName().endsWith(".jpeg"))
                    sprites.add(file.getAbsolutePath());
            }
            if (sprites.size() < 2){
                JOptionPane.showMessageDialog(this, "No se encontraron imágenes o se encontraron menos de las necesarias en el directorio seleccionado", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        // Se crean las variables necesarias para crear el componente
        int vida = Integer.parseInt(txfVida.getText().trim());
        int cantidadGolpes = Integer.parseInt(txfGolpes.getText().trim());
        int nivel = Integer.parseInt(txfNivel.getText().trim());
        int campos = Integer.parseInt(txfCampos.getText().trim());
        int nivelAparicion = Integer.parseInt(txfNivelAparicion.getText().trim());
        // Si se necesita un alcance, se crea el componente con el constructor que lo necesita
        if (txfAlcance.isEnabled()){
            int alcance = Integer.parseInt(txfAlcance.getText().trim());
            try{
                // Se crea el componente con el constructor correspondiente
                componente = tipoComponente.getDeclaredConstructor(String.class, String.class, ArrayList.class, int.class, int.class, int.class, int.class, int.class, int.class).newInstance(Nombre, tipoApariencia, sprites, vida, cantidadGolpes, nivel, campos, nivelAparicion, alcance);
                JOptionPane.showMessageDialog(this, "Componente creado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            }catch (Exception e){
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(this, "Error al crear el componente", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }else{
            try{
                // Se crea el componente con el constructor correspondiente
                componente = tipoComponente.getDeclaredConstructor(String.class, String.class, ArrayList.class, int.class, int.class, int.class, int.class, int.class).newInstance(Nombre, tipoApariencia, sprites, vida, cantidadGolpes, nivel, campos, nivelAparicion);
                JOptionPane.showMessageDialog(this, "Componente creado exitosamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            }catch (Exception e){
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(this, "Error al crear el componente", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        // Se crea el archivo JSON con el componente
        EntitySerializer.writeObject(componente, currentDir + "/Componentes/" + componente.getNombre() + ".json");
        wipeEntries();


        
    }//GEN-LAST:event_btnGuardarComponenteActionPerformed

    private void txfNivelKeyReleased(java.awt.event.KeyEvent evt) {                                      
        txfCheckInts(txfNivel);
    }                                    

    private void txfCamposKeyReleased(java.awt.event.KeyEvent evt) {                                       
        txfCheckInts(txfCampos);
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarArchivo;
    private javax.swing.JButton btnGuardarComponente;
    private javax.swing.JFileChooser fchRecursos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAlcance;
    private javax.swing.JLabel lblCampos;
    private javax.swing.JLabel lblClasificacionComponente;
    private javax.swing.JLabel lblDevelopers;
    private javax.swing.JLabel lblGolpes;
    private javax.swing.JLabel lblImagenesTipo1;
    private javax.swing.JLabel lblNivel;
    private javax.swing.JLabel lblNivelAparicion;
    private javax.swing.JLabel lblNombreComponente;
    private javax.swing.JLabel lblSelected;
    private javax.swing.JLabel lblTipoComponente;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblVida;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.ButtonGroup rbtClasificación;
    private javax.swing.JRadioButton rbtDefensa;
    private javax.swing.JRadioButton rbtGif;
    private javax.swing.JRadioButton rbtOpcion1;
    private javax.swing.JRadioButton rbtOpcion2;
    private javax.swing.JRadioButton rbtOpcion3;
    private javax.swing.JRadioButton rbtOpcion4;
    private javax.swing.JRadioButton rbtOpcion5;
    private javax.swing.JRadioButton rbtOpcion6;
    private javax.swing.JRadioButton rbtSprites;
    private javax.swing.ButtonGroup rbtTipo;
    private javax.swing.ButtonGroup rbtTipoRecursos;
    private javax.swing.JRadioButton rbtZombie;
    private javax.swing.JTextField txfAlcance;
    private javax.swing.JTextField txfCampos;
    private javax.swing.JTextField txfGolpes;
    private javax.swing.JTextField txfNivel;
    private javax.swing.JTextField txfNivelAparicion;
    private javax.swing.JTextField txfNombreComponente;
    private javax.swing.JTextField txfVida;
    // End of variables declaration//GEN-END:variables
}
